<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>homework</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <name>${project.artifactId}</name>    
    <packaging>jar</packaging>
    
    <parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.3.RELEASE</version>		
	</parent>

    <properties>
    
        <encoding>UTF-8</encoding>
        
        <pi4j.version>1.2</pi4j.version>
        
        <!-- JDK -->
		<java.version>1.8</java.version> 
		
		<!-- Hibernate -->
        <hibernate.version>4.3.11.Final</hibernate.version>
        <hibernate-validator.version>5.2.1.Final</hibernate-validator.version>     
        
    </properties>

    <dependencies>
    
	    <dependency>
		    <groupId>com.pi4j</groupId>
		    <artifactId>pi4j-core</artifactId>
		    <version>${pi4j.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>com.pi4j</groupId>
		    <artifactId>pi4j-gpio-extension</artifactId>
		    <version>${pi4j.version}</version>
		</dependency>
		
		<dependency>
		    <groupId>com.jcraft</groupId>
		    <artifactId>jsch</artifactId>
		    <version>0.1.55</version>
		</dependency>
 
 		<!-- Web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- Web with Tomcat + Embed -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>			
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>			
		</dependency>
		
		<!-- Need this for json to/from object -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-core</artifactId>
			</dependency>

		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
			</dependency>

		<!-- Need this to compile JSP -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Need this to compile JSP -->
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>4.6.1</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Dependencies for SQLite -->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			</dependency>
				  
		<dependency>
		    <groupId>com.enigmabridge</groupId>
		    <artifactId>hibernate4-sqlite-dialect</artifactId>
		    <version>0.1.2</version>
		</dependency>	
		
		<!-- Hibernate -->		
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        
		<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>  
        
        <!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
		</dependency>
		
		<dependency>
        	<groupId>org.aspectj</groupId>
        	<artifactId>aspectjweaver</artifactId>
        	</dependency>
		
		<!-- JPA -->		
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
        </dependency>
        
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
	    </dependency>
        
		<!-- Connection Pool -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>	  
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
	    </dependency>
		
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>	
		
		<dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-test</artifactId>
		   <scope>test</scope>
		</dependency>
 
    </dependencies>  

	<build>

	    <resources>
	        <resource>
	        	<directory>src/main/resources</directory>
	            <filtering>true</filtering>	          
	        </resource>		        
	    </resources>	
			    
		<plugins>
			
			<!-- Package as an executable jar/war -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<installDirectory>target</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>						
						<configuration>
							<nodeVersion>v10.15.3</nodeVersion>
							<npmVersion>6.4.1</npmVersion> 
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>webpack build</id>
						<goals>
							<goal>webpack</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
	        <plugin>
	            <groupId>com.spotify</groupId>
	            <artifactId>docker-maven-plugin</artifactId>	
	            <version>1.4.9</version>            
	            <configuration>
	                <imageName>${docker.image.prefix}/${project.artifactId}</imageName>
	                <dockerDirectory>src/main/docker</dockerDirectory>
	                <resources>
	                    <resource>
	                        <targetPath>/</targetPath>
	                        <directory>${project.build.directory}</directory>
	                        <include>${project.build.finalName}.jar</include>
	                    </resource>
	                </resources>
	            </configuration>
	        </plugin>
			
 			<plugin>
		        <artifactId>maven-resources-plugin</artifactId>		        
		        <executions>
		          <execution>
		            <id>copy-resources</id>
		            <!-- here the phase you need -->
		            <phase>validate</phase>
		            <goals>
		              <goal>copy-resources</goal>
		            </goals>
					<configuration>
						<outputDirectory>target</outputDirectory>
						<resources>
						    <resource>
						        <directory>src/main/resources</directory>
						        <includes>
									<include>*.bat</include>									
						        </includes>
						  </resource>  
 						  <resource>
						        <directory>/</directory>
						        <includes>
									<include>*.sh</include>
									<include>*.conf</include>
									<include>*.sqlite</include>	
									<include>*.yml</include>	
									<include>Dockerfile</include>								
						        </includes>
						  </resource>        
						</resources> 
					</configuration>          
		          </execution>
		        </executions>
		      </plugin>		  
			
		</plugins>
	</build>

</project>